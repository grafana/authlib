syntax = "proto3";

package authz.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

service AuthzService {
  rpc Read(ReadRequest) returns (ReadResponse) {
    option (google.api.http) = {
      post: "/v1/namespace/{namespace}/read"
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Read permissions for subject"
      tags: ["Read"]
      operation_id: "Read"
      description: "The read API will read permissions for subject"
    };
  }
  rpc Check(CheckRequest) returns (CheckResponse) {
    option (google.api.http) = {
      post: "/v1/namespace/{namespace}/check"
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Check access for subject on resource given parent"
      tags: ["Check"]
      operation_id: "Check"
      description: "The check API will check if a subject is allowed to perform an action on a specific scope."
    };
  }
}

message ReadRequest {
  string subject = 1;
  string action = 2;
  string namespace = 3;
}

message ReadResponse {
  message Data {
    string scope = 1;
  }
  repeated Data data = 1;
  bool Found = 2;
}

message CheckRequest {
  string subject = 1;
  string verb = 2;
  string group = 3;
  string resource = 4;
  string namespace = 5;
  string name = 6;
  string subresource = 7;
  string path = 8;
}

message CheckResponse {
  bool allowed = 1;
}
